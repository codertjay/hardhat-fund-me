{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x6335240782f950a68b713bc3581a8501187aa2a37727a6c7129de6980972f953",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1071460",
    "logsBloom": "0x
    "blockHash": "0x8ea7a2643c8b34620b8b6accc5bf193e515928f5fb9897330ca203e2da339d0c",
    "transactionHash": "0x6335240782f950a68b713bc3581a8501187aa2a37727a6c7129de6980972f953",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1071460",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "137ad01e416741cf36a2dad46b5f0a49",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Afenikhena Favour\",\"details\":\"this implements price as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"This contracts is to demo a sample funding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./PriceConverter.sol\\\";\\r\\n\\r\\n    error FundMe__NotOwner();\\r\\n\\r\\n// Interfaces, Libraries,Contracts\\r\\n\\r\\n/** @title A contract for crowd funding\\r\\n* @author Afenikhena Favour\\r\\n* @notice This contracts is to demo a sample funding contract\\r\\n* @dev this implements price as our library\\r\\n*/\\r\\ncontract FundMe {\\r\\n    //    Type Declaration\\r\\n    using PriceConverter for uint256;\\r\\n\\r\\n    // state variables\\r\\n    mapping(address => uint256) private s_addressToAmountFunded;\\r\\n    address[] private s_funders;\\r\\n\\r\\n    modifier onlyOwner {\\r\\n        require(msg.sender == i_owner);\\r\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\r\\n    address private  immutable  i_owner;\\r\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\r\\n    AggregatorV3Interface private s_priceFeed;\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        i_owner = msg.sender;\\r\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    fallback() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    /*\\r\\n    * @notice This Function funds the contracts\\r\\n    * @dev this implements price as our library\\r\\n    */\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\r\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\r\\n        s_funders.push(msg.sender);\\r\\n    }\\r\\n\\r\\n\\r\\n    function withdraw() payable onlyOwner public {\\r\\n        for (uint256 funderIndex = 0;\\r\\n            funderIndex < s_funders.length;\\r\\n            funderIndex++) {\\r\\n            address funder = s_funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        // // transfer\\r\\n        // payable(msg.sender).transfer(address(this).balance);\\r\\n        // // send\\r\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\r\\n        // require(sendSuccess, \\\"Send failed\\\");\\r\\n        // call\\r\\n        (bool callSuccess,) = payable(msg.sender).call{value : address(this).balance}(\\\"\\\");\\r\\n        require(callSuccess, \\\"Call failed\\\");\\r\\n    }\\r\\n\\r\\n    function cheaperWithdraw() public payable onlyOwner {\\r\\n        address[] memory funders = s_funders;\\r\\n        // mappings cant be in memory , sorry!\\r\\n        for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex ++) {\\r\\n            address funder = funders[funderIndex];\\r\\n            s_addressToAmountFunded[funder] = 0;\\r\\n        }\\r\\n        s_funders = new address[](0);\\r\\n        (bool success,) = i_owner.call{value : address(this).balance}(\\\"\\\");\\r\\n        require(success);\\r\\n    }\\r\\n\\r\\n    function getOwner() public view returns(address){\\r\\n        return i_owner;\\r\\n    }\\r\\n\\r\\n    function getFunder(uint256 index) public view returns (address){\\r\\n        return s_funders[index];\\r\\n    }\\r\\n\\r\\n    function getAddressToAmountFunded(address funder) public view returns (uint256){\\r\\n        return s_addressToAmountFunded[funder];\\r\\n    }\\r\\n    function getPriceFeed() public view returns (AggregatorV3Interface){\\r\\n        return s_priceFeed;\\r\\n    }\\r\\n\\r\\n}\\r\\n\\r\\n// Concepts we didn't cover yet (will cover in later sections)\\r\\n// 1. Enum\\r\\n// 2. Events\\r\\n// 3. Try / Catch\\r\\n// 4. Function Selector\\r\\n// 5. abi.encode / decode\\r\\n// 6. Hash with keccak256\\r\\n// 7. Yul / Assembly\\r\\n\\r\\n\\r\\n\",\"keccak256\":\"0x847ca6d7f7c38a01084a1a3ef9d84bbfbf298fedcefd200d5fcc339de8bada3d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        // Rinkeby ETH / USD Address\\r\\n        // https://docs.chain.link/docs/ethereum-addresses/\\r\\n\\r\\n        (, int256 answer, , ,) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n\\r\\n    internal\\r\\n    view\\r\\n    returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0x1342e849063e970fa315789ee0f13c7c681560e51d87a70288689ced8e28b3c5\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200139a3803806200139a833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61120662000194600039600081816103350152818161038d015281816105dc0152818161062c01528181610684015261087a01526112066000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610b3e565b6102eb565b6040516100cc9190610b84565b60405180910390f35b6100dd610333565b005b3480156100eb57600080fd5b506100f46105cb565b6040516101019190610b84565b60405180910390f35b34801561011657600080fd5b5061011f6105d8565b60405161012c9190610bae565b60405180910390f35b34801561014157600080fd5b5061014a610600565b6040516101579190610c28565b60405180910390f35b6101686101b1565b005b61017261062a565b005b34801561018057600080fd5b5061019b60048036038101906101969190610c6f565b610910565b6040516101a89190610bae565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461095890919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610cf9565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610d48565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038b57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610410576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104bb5760006001828154811061043657610435610d9e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b390610dcd565b915050610413565b50600067ffffffffffffffff8111156104d7576104d6610e16565b5b6040519080825280602002602001820160405280156105055781602001602082028036833780820191505090505b506001908051906020019061051b929190610a34565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054290610e76565b60006040518083038185875af1925050503d806000811461057f576040519150601f19603f3d011682016040523d82523d6000602084013e610584565b606091505b50509050806105c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bf90610ed7565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461068257600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610707576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561078b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610741575b5050505050905060005b81518110156108155760008282815181106107b3576107b2610d9e565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061080d90610dcd565b915050610795565b50600067ffffffffffffffff81111561083157610830610e16565b5b60405190808252806020026020018201604052801561085f5781602001602082028036833780820191505090505b5060019080519060200190610875929190610a34565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108bc90610e76565b60006040518083038185875af1925050503d80600081146108f9576040519150601f19603f3d011682016040523d82523d6000602084013e6108fe565b606091505b505090508061090c57600080fd5b5050565b60006001828154811061092657610925610d9e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061096483610994565b90506000670de0b6b3a7640000858361097d9190610ef7565b6109879190610f80565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109dd57600080fd5b505afa1580156109f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a15919061103e565b5050509150506402540be40081610a2c91906110b9565b915050919050565b828054828255906000526020600020908101928215610aad579160200282015b82811115610aac5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a54565b5b509050610aba9190610abe565b5090565b5b80821115610ad7576000816000905550600101610abf565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0b82610ae0565b9050919050565b610b1b81610b00565b8114610b2657600080fd5b50565b600081359050610b3881610b12565b92915050565b600060208284031215610b5457610b53610adb565b5b6000610b6284828501610b29565b91505092915050565b6000819050919050565b610b7e81610b6b565b82525050565b6000602082019050610b996000830184610b75565b92915050565b610ba881610b00565b82525050565b6000602082019050610bc36000830184610b9f565b92915050565b6000819050919050565b6000610bee610be9610be484610ae0565b610bc9565b610ae0565b9050919050565b6000610c0082610bd3565b9050919050565b6000610c1282610bf5565b9050919050565b610c2281610c07565b82525050565b6000602082019050610c3d6000830184610c19565b92915050565b610c4c81610b6b565b8114610c5757600080fd5b50565b600081359050610c6981610c43565b92915050565b600060208284031215610c8557610c84610adb565b5b6000610c9384828501610c5a565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ce3601b83610c9c565b9150610cee82610cad565b602082019050919050565b60006020820190508181036000830152610d1281610cd6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d5382610b6b565b9150610d5e83610b6b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9357610d92610d19565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610dd882610b6b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e0b57610e0a610d19565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e60600083610e45565b9150610e6b82610e50565b600082019050919050565b6000610e8182610e53565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ec1600b83610c9c565b9150610ecc82610e8b565b602082019050919050565b60006020820190508181036000830152610ef081610eb4565b9050919050565b6000610f0282610b6b565b9150610f0d83610b6b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f4657610f45610d19565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f8b82610b6b565b9150610f9683610b6b565b925082610fa657610fa5610f51565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fd081610fb1565b8114610fdb57600080fd5b50565b600081519050610fed81610fc7565b92915050565b6000819050919050565b61100681610ff3565b811461101157600080fd5b50565b60008151905061102381610ffd565b92915050565b60008151905061103881610c43565b92915050565b600080600080600060a0868803121561105a57611059610adb565b5b600061106888828901610fde565b955050602061107988828901611014565b945050604061108a88828901611029565b935050606061109b88828901611029565b92505060806110ac88828901610fde565b9150509295509295909350565b60006110c482610ff3565b91506110cf83610ff3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561110e5761110d610d19565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561114b5761114a610d19565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561118857611187610d19565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111c5576111c4610d19565b5b82820290509291505056fea2646970667358221220b8ea2ab472a62e8f18a1bc9cb21e3807b6d56e0fea2b57d66b0f46d7de4b360764736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610135578063b60d428814610160578063be2693f01461016a578063d7b4750c146101745761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100df578063893d20e81461010a5761008e565b3661008e5761008c6101b1565b005b6100966101b1565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610b3e565b6102eb565b6040516100cc9190610b84565b60405180910390f35b6100dd610333565b005b3480156100eb57600080fd5b506100f46105cb565b6040516101019190610b84565b60405180910390f35b34801561011657600080fd5b5061011f6105d8565b60405161012c9190610bae565b60405180910390f35b34801561014157600080fd5b5061014a610600565b6040516101579190610c28565b60405180910390f35b6101686101b1565b005b61017261062a565b005b34801561018057600080fd5b5061019b60048036038101906101969190610c6f565b610910565b6040516101a89190610bae565b60405180910390f35b6802b5e3af16b18800006101f0600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461095890919063ffffffff16565b1015610231576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161022890610cf9565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461027f9190610d48565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461038b57600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610410576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104bb5760006001828154811061043657610435610d9e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806104b390610dcd565b915050610413565b50600067ffffffffffffffff8111156104d7576104d6610e16565b5b6040519080825280602002602001820160405280156105055781602001602082028036833780820191505090505b506001908051906020019061051b929190610a34565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161054290610e76565b60006040518083038185875af1925050503d806000811461057f576040519150601f19603f3d011682016040523d82523d6000602084013e610584565b606091505b50509050806105c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105bf90610ed7565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461068257600080fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610707576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561078b57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610741575b5050505050905060005b81518110156108155760008282815181106107b3576107b2610d9e565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061080d90610dcd565b915050610795565b50600067ffffffffffffffff81111561083157610830610e16565b5b60405190808252806020026020018201604052801561085f5781602001602082028036833780820191505090505b5060019080519060200190610875929190610a34565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108bc90610e76565b60006040518083038185875af1925050503d80600081146108f9576040519150601f19603f3d011682016040523d82523d6000602084013e6108fe565b606091505b505090508061090c57600080fd5b5050565b60006001828154811061092657610925610d9e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60008061096483610994565b90506000670de0b6b3a7640000858361097d9190610ef7565b6109879190610f80565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156109dd57600080fd5b505afa1580156109f1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a15919061103e565b5050509150506402540be40081610a2c91906110b9565b915050919050565b828054828255906000526020600020908101928215610aad579160200282015b82811115610aac5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a54565b5b509050610aba9190610abe565b5090565b5b80821115610ad7576000816000905550600101610abf565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b0b82610ae0565b9050919050565b610b1b81610b00565b8114610b2657600080fd5b50565b600081359050610b3881610b12565b92915050565b600060208284031215610b5457610b53610adb565b5b6000610b6284828501610b29565b91505092915050565b6000819050919050565b610b7e81610b6b565b82525050565b6000602082019050610b996000830184610b75565b92915050565b610ba881610b00565b82525050565b6000602082019050610bc36000830184610b9f565b92915050565b6000819050919050565b6000610bee610be9610be484610ae0565b610bc9565b610ae0565b9050919050565b6000610c0082610bd3565b9050919050565b6000610c1282610bf5565b9050919050565b610c2281610c07565b82525050565b6000602082019050610c3d6000830184610c19565b92915050565b610c4c81610b6b565b8114610c5757600080fd5b50565b600081359050610c6981610c43565b92915050565b600060208284031215610c8557610c84610adb565b5b6000610c9384828501610c5a565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ce3601b83610c9c565b9150610cee82610cad565b602082019050919050565b60006020820190508181036000830152610d1281610cd6565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d5382610b6b565b9150610d5e83610b6b565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d9357610d92610d19565b5b828201905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610dd882610b6b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e0b57610e0a610d19565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e60600083610e45565b9150610e6b82610e50565b600082019050919050565b6000610e8182610e53565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ec1600b83610c9c565b9150610ecc82610e8b565b602082019050919050565b60006020820190508181036000830152610ef081610eb4565b9050919050565b6000610f0282610b6b565b9150610f0d83610b6b565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f4657610f45610d19565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f8b82610b6b565b9150610f9683610b6b565b925082610fa657610fa5610f51565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fd081610fb1565b8114610fdb57600080fd5b50565b600081519050610fed81610fc7565b92915050565b6000819050919050565b61100681610ff3565b811461101157600080fd5b50565b60008151905061102381610ffd565b92915050565b60008151905061103881610c43565b92915050565b600080600080600060a0868803121561105a57611059610adb565b5b600061106888828901610fde565b955050602061107988828901611014565b945050604061108a88828901611029565b935050606061109b88828901611029565b92505060806110ac88828901610fde565b9150509295509295909350565b60006110c482610ff3565b91506110cf83610ff3565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561110e5761110d610d19565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561114b5761114a610d19565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561118857611187610d19565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111c5576111c4610d19565b5b82820290509291505056fea2646970667358221220b8ea2ab472a62e8f18a1bc9cb21e3807b6d56e0fea2b57d66b0f46d7de4b360764736f6c63430008080033",
  "devdoc": {
    "author": "Afenikhena Favour",
    "details": "this implements price as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "This contracts is to demo a sample funding contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 93,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}